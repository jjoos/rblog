Isomorphic javascript website with ReactJS poc:

Todo:
Nginx:
- Add to bin setup:  cp /usr/local/etc/nginx/mime.types tmp/nginx
- make sure the .env is also availabel in the api project ln -s ../.env ./.env
Api:
  ✔ Implement models @done (14-11-20 12:20)
  ✘ Investigate moving all to firebase  @cancelled (14-12-14 17:06)
    To expensive not accessible for other people https://www.firebase.com/docs/hosting/ https://www.npmjs.com/package/firebase https://reactfiretodoapp.firebaseapp.com/ http://quaxio.com/react_tictactoe/ https://www.firebase.com/docs/web/libraries/react/quickstart.html https://www.firebase.com/blog/2014-05-01-using-firebase-with-react.html https://github.com/lvivier/firebase-reactive
  ☐ Remove current seed and lorem ipsum
  ☐ Let's move api to a rails app
Move server side to express:
  https://github.com/strongloop/express
Host the app on:
  heroko: https://github.com/heroku/node-js-getting-started https://devcenter.heroku.com/articles/nodejs-support
  http://www.evennode.com/
  https://modulus.io/
  https://www.nodejitsu.com/
  http://cloudno.de/#!/home
Static assets:
  ✘ run web pack server locally and deploy to cdn for production @cancelled (14-12-14 17:06)
    Let's serve assets with nginx
  ✔ Serve images @done (14-11-20 12:20)
Organization:
  ✔ grouping things arround subject (experiment, no benefits) @done (14-11-23 14:38)
  ✔ add central constants file @done (14-11-20 13:25)
Functionality:
  ✔ render markdown for posts @done (14-12-13 22:30)
  ✔ create navigation store @done (14-11-26 21:11)
  ☐ Write comments
  ☐ Sharing
  ☐ login
  ☐ Adding posts
write articles:
  ☐ react views (from talk)
  ☐ flux and benifits
  ☐ isomorphic js apps
  ☐ introducing own framework (if not using other framework)
  ☐ comparison of flux frameworks
  ☐ testing
  ☐ push events, websockets with flux
Styling:
  ☐ Add scss pipeline or use 'react css inline'
Views:
  ✔ Move views to seperate files @done (14-11-23 14:30)
  ☐ Configure favicon url to assets
Tests:
  ☐ Add jest
  ☐ add tests
Framework:
  ✔ throttle dispatches, every action should return a promise that is kept track ok (cofffe-react). This way we can check if all the actions are done and add structures to wait on each other. This way we can make sure not two dispatches run at the same time. @done (14-11-24 22:24)
  ✔ throttle change events @done (14-11-24 22:24)
  ✔ Let dispatcher helper use childContext @done (14-11-26 20:50)
  ✔ how to get data (posts, post, data: methods) (split out in stores) @done (14-11-25 16:32)
  ✔ extract flux things @done (14-11-26 20:51)
  ☐ move flux things to npm package
  ☐ better error handling
  ☐ investigate immutable javascript
  ☐ investigate using existing framework

Reading list and references:
flux:
https://reactjsnews.com/the-state-of-flux/
http://facebook.github.io/flux/docs/overview.html
http://facebook.github.io/react/blog/2014/07/30/flux-actions-and-the-dispatcher.html
http://www.infoq.com/news/2014/05/facebook-mvc-flux
https://github.com/facebook/flux
https://github.com/yahoo/dispatchr
http://fluxxor.com/
https://github.com/dustingetz/react-cursor/
https://github.com/mquan/cortex
http://jamesfriend.com.au/implementing-flux-coffeescript
https://github.com/jsdf/flux-coffee
https://github.com/jmreidy/fluxy
https://github.com/spoike/refluxjs
https://github.com/yoshuawuyts/barracks
http://deloreanjs.com/
http://kenwheeler.github.io/mcfly/
https://github.com/mjw56/ruscello

routing:
https://github.com/yahoo/routr
https://github.com/rackt/react-router
http://backbonejs.org/#Router
http://enome.github.io/javascript/2014/05/09/lets-create-our-own-router-component-with-react-js.html
http://jilles.me/express-routing-the-beginners-guide/ (express router)
https://github.com/rackt/react-router/wiki/Announcements
https://github.com/ziad-saab/react-conditional-component

blogs and other comments:
http://www.techsonian.net/2014/09/from-backbone-to-react-our-experience-scaling-a-web-application/
http://jlongster.com/Removing-User-Interface-Complexity,-or-Why-React-is-Awesome
http://swannodette.github.io/2013/12/17/the-future-of-javascript-mvcs/
http://www.toptal.com/front-end/simple-data-flow-in-react-applications-using-flux-and-backbone
https://medium.com/@garychambers108/flux-in-practice-ec08daa9041a
http://blogs.atlassian.com/2014/08/flux-architecture-step-by-step/
http://spoike.ghost.io/deconstructing-reactjss-flux/
https://news.ycombinator.com/item?id=8355255
https://news.ycombinator.com/item?id=8097776
https://news.ycombinator.com/item?id=7719957

Testing:
http://yahooeng.tumblr.com/post/102274727496/to-testutil-or-not-to-testutil

Isomorphic websites:
https://javascriptkicks.com/
http://nerds.airbnb.com/isomorphic-javascript-future-web-apps/
http://www.slideshare.net/spikebrehm/2014-0313fluent
http://nicolashery.com/exploring-isomorphic-javascript/

Realtime:
http://swarmjs.github.io/articles/todomvc/
https://github.com/gritzko/swarm

Presentations:
https://speakerdeck.com/pedronauck/reactjs-keep-simple-everything-can-be-a-component
Isomorphic js http://goodtalk.hugeinc.com/isomorphic-javascript-11122014/#/12

Components:
http://tomchentw.github.io/react-google-maps/
data  tables: https://github.com/glittershark/reactable

Different rendering backends:
canvas: https://github.com/mjohnston/react-canvas/tree/ejecta/examples/ejecta

hot loading react components:
  http://gaearon.github.io/react-hot-loader/
  https://github.com/gaearon/react-hot-loader/blob/master/docs/README.md#migrating-to-10

react.js tutorials:
  http://projs.hackhat.com/react-js-an-interactive-tutorial-to-get-started/#header?utm_source=http://webdesignporto.com/react-js-in-pure-javascript-facebook-library/

larger flux + react examples:
https://github.com/ianobermiller/nuclearmail

React best practices:
https://gist.github.com/jamesgpearce/53a6fc57677870f93248
http://aeflash.com/2015-02/react-tips-and-best-practices.html

Styling:
https://speakerdeck.com/vjeux/react-css-in-js

used layout:
http://line25.com/tutorials/create-a-typography-based-blog-layout-in-html5
http://line25.com/wp-content/uploads/2011/typo-code/demo/index.html

relay and graphql:
http://facebook.github.io/react/blog/2015/02/20/introducing-relay-and-graphql.html

appendix:
https://github.com/hughsk/disc
https://www.youtube.com/watch?v=41YcEwv3njg&spfreload=10
https://pomax.github.io/#gh-weblog-1419289380022
https://blog.rotenberg.io/million-user-webchat-with-full-stack-flux-react-redis-and-postgresql/
http://www.react-europe.org/
http://facebook.github.io/react/blog/2015/02/18/react-conf-roundup-2015.html
https://github.com/spoike/refluxjs
https://github.com/facebook/flow
https://medium.com/@dan_abramov/the-case-for-flux-379b7d1982c6
https://github.com/yahoo/flux-examples/issues/70
https://github.com/reactjs/react-future/tree/0d451abb6e4ee1078d6761adda8a5247cbde1218
http://st-www.cs.illinois.edu/users/smarch/st-docs/mvc.html (original mvc paper)
http://www.code-experience.com/avoiding-event-chains-in-single-page-applications/
http://merrickchristensen.com/articles/react-angular-di.html
https://github.com/goatslacker/alt
http://calendar.perfplanet.com/2013/diff/

http://facebook.github.io/react/blog/2014/10/17/community-roundup-23.html =>
- https://www.youtube.com/watch?v=i__969noyAM#t=206
- https://github.com/yahoo/flux-router-component
- https://github.com/yahoo/fetchr
- https://github.com/yahoo/flux-examples
- http://spoike.ghost.io/deconstructing-reactjss-flux/
- http://ianobermiller.com/blog/2014/09/15/react-and-flux-interview/
- http://www.kevindangoor.com/2014/09/intro-to-the-new-brackets-project-tree/
- http://www.code-experience.com/async-requests-with-react-js-and-flux-revisited/
- http://ameyakarve.com/jekyll/update/2014/02/06/Undo-React-Flux-Mori.html
- https://medium.com/@garychambers108/flux-in-practice-ec08daa9041a
- http://christianalfoni.github.io/javascript/2014/08/20/react-js-and-flux.html
- http://blogs.atlassian.com/2014/08/flux-architecture-step-by-step/
- https://github.com/deloreanjs/delorean
- https://www.youtube.com/watch?v=XhXC4SKOGfQ

http://omniscientjs.github.io/
http://omniscientjs.github.io/playground/#var%20data%20%3D%20immstruct(%7B%0A%20%20items%3A%20%5B%0A%20%20%20%20%7B%20checked%3A%20true%2C%20text%3A%20'Create%20example%20an%20Omniscient%20playground!%20%3AD'%20%7D%2C%0A%20%20%20%20%7B%20checked%3A%20true%2C%20text%3A%20'Make%20it%20support%20es6!'%20%7D%2C%0A%20%20%20%20%7B%20checked%3A%20true%2C%20text%3A%20'And%20jsx!'%20%7D%2C%0A%20%20%20%20%7B%20checked%3A%20true%2C%20text%3A%20'It%20should%20compile%20as%20you%20type!'%20%7D%2C%0A%20%20%20%20%7B%20checked%3A%20true%2C%20text%3A%20'And%20give%20immediate%20feedback!'%20%7D%2C%0A%20%20%20%20%7B%20checked%3A%20false%2C%20text%3A%20'Make%20more%20examples!!1'%20%7D%0A%20%20%5D%0A%7D)%3B%0A%0A%2F%2F%20check%20your%20console%20to%20see%20omniscient's%20debug%20info%20for%20what%20needs%0A%2F%2F%20to%20render%20as%20the%20immstruct%20structure%20change!%0Acomponent.debug()%3B%0A%0Avar%20Item%20%3D%20component('Item'%2C%20function%20(%7Bitem%7D)%20%7B%0A%20%20var%20onChecked%20%3D%20()%20%3D%3E%20item.update('checked'%2C%20state%20%3D%3E%20!state)%3B%0A%20%20var%20style%20%3D%20%7B%20%0A%20%20%20%20textDecoration%3A%20item.get('checked')%20%3F%20'line-through'%20%3A%20'none'%2C%0A%20%20%20%20%2F%2F%20color%3A%20item.get('checked')%20%3F%20'green'%20%3A%20''%0A%20%20%7D%3B%0A%20%20return%20(%0A%20%20%20%20%3Clabel%20style%3D%7Bstyle%7D%3E%0A%20%20%20%20%20%20%3Cinput%20type%3D%22checkbox%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20onChange%3D%7BonChecked%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20checked%3D%7Bitem.get('checked')%7D%20%2F%3E%0A%20%20%20%20%20%20%20%7Bitem.get('text')%7D%0A%20%20%20%20%3C%2Flabel%3E%0A%20%20)%3B%0A%7D).jsx%3B%0A%0Avar%20List%20%3D%20component('List'%2C%20(%7Bitems%7D)%20%3D%3E%0A%20%20%3Cform%3E%0A%20%20%20%20%3Cul%3E%0A%20%20%20%20%20%20%7Bitems.toArray().map((item%2C%20i)%20%3D%3E%0A%20%20%20%20%20%20%20%20%3Cli%20key%3D%7Bi%7D%3E%0A%20%20%20%20%20%20%20%20%20%20%3CItem%20item%3D%7Bitem%7D%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2Fli%3E%0A%20%20%20%20%20%20)%7D%0A%20%20%20%20%3C%2Ful%3E%0A%20%20%3C%2Fform%3E)%3B%0A%0Arender()%3B%0Adata.on('swap'%2C%20render)%3B%0A%0Afunction%20render%20()%20%7B%0A%20%20React.render(%0A%20%20%20%20List(%7B%20items%3A%20data.cursor('items')%20%7D)%2C%0A%20%20%20%20el)%3B%0A%7D%0A

http://karma-runner.github.io/0.12/index.html
https://github.com/umdjs/umd/
https://github.com/bebraw/grunt-umd
http://rathercurio.us/building-umd-modules-with-dependencies-with-browserify
http://dontkry.com/posts/code/browserify-and-the-universal-module-definition.html
http://esa-matti.suuronen.org/blog/2013/03/22/journey-from-requirejs-to-browserify/
http://requirejs.org/docs/start.html#add
http://pascalhertleif.de/artikel/using-promises-more-effectively/
http://fitzgeraldnick.com/weblog/55/
http://webpack.github.io/docs/configuration.html
http://blog.keithcirkel.co.uk/why-we-should-stop-using-grunt/
http://webpack.github.io/docs/webpack-for-browserify-users.html
http://spring.io/understanding/javascript-package-managers
http://dontkry.com/posts/code/browserify-and-the-universal-module-definition.html
http://esa-matti.suuronen.org/blog/2013/03/22/journey-from-requirejs-to-browserify/
http://www.forbeslindesay.co.uk/post/46324645400/standalone-browserify-builds
https://github.com/KyleAMathews/coffee-react-quickstart
https://hackhands.com/fast-rich-client-rails-development-webpack-es6-transpiler/
http://bdadam.com/blog/video-douglas-crockford-about-the-new-good-parts.html
https://www.youtube.com/watch?v=_frm9zfHK_c&feature=youtu.be

http://react.rocks/

search reusable components: http://react-components.com/ http://www.reactjsx.com/


http://javascriptplayground.com/blog/2015/02/promises/


http://blog.risingstack.com/from-angularjs-to-react-the-isomorphic-way/
http://omniscientjs.github.io/
http://omniscientjs.github.io/guides/
http://omniscientjs.github.io/playground/#var%20data%20%3D%20immstruct(%7B%0A%20%20items%3A%20%5B%0A%20%20%20%20%7B%20checked%3A%20true%2C%20text%3A%20'Create%20example%20an%20Omniscient%20playground!%20%3AD'%20%7D%2C%0A%20%20%20%20%7B%20checked%3A%20true%2C%20text%3A%20'Make%20it%20support%20es6!'%20%7D%2C%0A%20%20%20%20%7B%20checked%3A%20true%2C%20text%3A%20'And%20jsx!'%20%7D%2C%0A%20%20%20%20%7B%20checked%3A%20true%2C%20text%3A%20'It%20should%20compile%20as%20you%20type!'%20%7D%2C%0A%20%20%20%20%7B%20checked%3A%20true%2C%20text%3A%20'And%20give%20immediate%20feedback!'%20%7D%2C%0A%20%20%20%20%7B%20checked%3A%20false%2C%20text%3A%20'Make%20more%20examples!!1'%20%7D%0A%20%20%5D%0A%7D)%3B%0A%0A%2F%2F%20check%20your%20console%20to%20see%20omniscient's%20debug%20info%20for%20what%20needs%0A%2F%2F%20to%20render%20as%20the%20immstruct%20structure%20change!%0Acomponent.debug()%3B%0A%0Avar%20Item%20%3D%20component('Item'%2C%20function%20(%7Bitem%7D)%20%7B%0A%20%20var%20onChecked%20%3D%20()%20%3D%3E%20item.update('checked'%2C%20state%20%3D%3E%20!state)%3B%0A%20%20var%20style%20%3D%20%7B%20%0A%20%20%20%20textDecoration%3A%20item.get('checked')%20%3F%20'line-through'%20%3A%20'none'%2C%0A%20%20%20%20%2F%2F%20color%3A%20item.get('checked')%20%3F%20'green'%20%3A%20''%0A%20%20%7D%3B%0A%20%20return%20(%0A%20%20%20%20%3Clabel%20style%3D%7Bstyle%7D%3E%0A%20%20%20%20%20%20%3Cinput%20type%3D%22checkbox%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20onChange%3D%7BonChecked%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20checked%3D%7Bitem.get('checked')%7D%20%2F%3E%0A%20%20%20%20%20%20%20%7Bitem.get('text')%7D%0A%20%20%20%20%3C%2Flabel%3E%0A%20%20)%3B%0A%7D).jsx%3B%0A%0Avar%20List%20%3D%20component('List'%2C%20(%7Bitems%7D)%20%3D%3E%0A%20%20%3Cform%3E%0A%20%20%20%20%3Cul%3E%0A%20%20%20%20%20%20%7Bitems.toArray().map((item%2C%20i)%20%3D%3E%0A%20%20%20%20%20%20%20%20%3Cli%20key%3D%7Bi%7D%3E%0A%20%20%20%20%20%20%20%20%20%20%3CItem%20item%3D%7Bitem%7D%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2Fli%3E%0A%20%20%20%20%20%20)%7D%0A%20%20%20%20%3C%2Ful%3E%0A%20%20%3C%2Fform%3E)%3B%0A%0Arender()%3B%0Adata.on('swap'%2C%20render)%3B%0A%0Afunction%20render%20()%20%7B%0A%20%20React.render(%0A%20%20%20%20List(%7B%20items%3A%20data.cursor('items')%20%7D)%2C%0A%20%20%20%20el)%3B%0A%7D%0A
http://martyjs.org/

https://github.com/js-next/react-style
